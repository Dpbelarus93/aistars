#!/bin/bash

# üïâÔ∏è –†–∏—Ç—É–∞–ª –ü—Ä–æ–≤–µ—Ä–∫–∏ –ß–∏—Å—Ç–æ—Ç—ã –ö–æ–¥–∞
# –°–≤—è—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ Python –∫–æ–¥–∞

echo "üïâÔ∏è –ù–∞—á–∏–Ω–∞—é —Ä–∏—Ç—É–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∏—Å—Ç–æ—Ç—ã –∫–æ–¥–∞..."
echo "================================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
ERRORS=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_error() {
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: $1${NC}"
    ((ERRORS++))
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: $1${NC}"
    ((WARNINGS++))
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
if [ ! -d "code" ]; then
    log_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞ 'code' —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏"
else
    log_success "–ü–∞–ø–∫–∞ 'code' –Ω–∞–π–¥–µ–Ω–∞"
fi

if [ ! -d "HEYGEN_READY_BATCH" ]; then
    log_warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞ 'HEYGEN_READY_BATCH'"
else
    log_success "–ü–∞–ø–∫–∞ 'HEYGEN_READY_BATCH' –Ω–∞–π–¥–µ–Ω–∞"
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Python —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python —Ñ–∞–π–ª–æ–≤..."
python_files=$(find . -name "*.py" -not -path "./photo_batch_env/*" -not -path "./__pycache__/*")

if [ -z "$python_files" ]; then
    log_warning "Python —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
else
    for file in $python_files; do
        if python -m py_compile "$file" 2>/dev/null; then
            log_success "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: $file"
        else
            log_error "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ —Ñ–∞–π–ª–µ: $file"
        fi
    done
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤..."
for file in $python_files; do
    if file "$file" | grep -q "UTF-8"; then
        log_success "UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–∞: $file"
    else
        log_warning "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π: $file"
    fi
done

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."
critical_scripts=(
    "code/heygen_api_automator.py"
    "code/professional_lip_sync_automation.py"
    "code/comfy_upscaler_fixed.py"
)

for script in "${critical_scripts[@]}"; do
    if [ -f "$script" ]; then
        log_success "–ù–∞–π–¥–µ–Ω –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç: $script"
    else
        log_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç: $script"
    fi
done

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
echo "üé¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏..."
if [ -d "ALL_TRACK_PHOTOS" ]; then
    photo_count=$(find ALL_TRACK_PHOTOS -name "*.jpg" -o -name "*.png" | wc -l)
    log_success "–ù–∞–π–¥–µ–Ω–æ $photo_count —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"
else
    log_warning "–ü–∞–ø–∫–∞ ALL_TRACK_PHOTOS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

if [ -d "VOICE_TRACKS" ]; then
    audio_count=$(find VOICE_TRACKS -name "*.wav" -o -name "*.mp3" | wc -l)
    log_success "–ù–∞–π–¥–µ–Ω–æ $audio_count –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤"
else
    log_warning "–ü–∞–ø–∫–∞ VOICE_TRACKS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
if [ -d "lipsync" ]; then
    video_count=$(find lipsync -name "*.mp4" | wc -l)
    log_success "–ù–∞–π–¥–µ–Ω–æ $video_count –≥–æ—Ç–æ–≤—ã—Ö –≤–∏–¥–µ–æ"
else
    log_warning "–ü–∞–ø–∫–∞ lipsync –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

if [ -d "HEYGEN_READY_BATCH" ]; then
    mix_count=$(find HEYGEN_READY_BATCH -name "heygen_mix_*" -type d | wc -l)
    log_success "–ù–∞–π–¥–µ–Ω–æ $mix_count HeyGen –º–∏–∫—Å–æ–≤"
else
    log_warning "–ü–∞–ø–∫–∞ HEYGEN_READY_BATCH –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
echo "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞..."
free_space=$(df -h . | awk 'NR==2 {print $4}')
log_success "–°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: $free_space"

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo "================================================"
echo "üïâÔ∏è –†–∏—Ç—É–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω"
echo "================================================"

if [ $ERRORS -eq 0 ] && [ $WARNINGS -eq 0 ]; then
    echo -e "${GREEN}‚ú® –ö–û–î –ß–ò–°–¢ –ò –ì–ê–†–ú–û–ù–ò–ß–ï–ù ‚ú®${NC}"
    exit 0
elif [ $ERRORS -eq 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
    echo -e "${GREEN}‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ—Ç${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω–æ $ERRORS –æ—à–∏–±–æ–∫ –∏ $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
    echo -e "${RED}üî• –¢–†–ï–ë–£–ï–¢–°–Ø –û–ß–ò–©–ï–ù–ò–ï –ö–û–î–ê${NC}"
    exit 1
fi 