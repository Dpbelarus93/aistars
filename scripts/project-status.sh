#!/bin/bash

# üïâÔ∏è –°–≤—è—â–µ–Ω–Ω—ã–π –°–∫—Ä–∏–ø—Ç –ü—Ä–æ–≤–µ—Ä–∫–∏ –°—Ç–∞—Ç—É—Å–∞ –ü—Ä–æ–µ–∫—Ç–∞
# –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è

echo "üïâÔ∏è –°–¢–ê–¢–£–° –ü–†–û–ï–ö–¢–ê '–•–û–ß–£ –ï–©–ï'"
echo "================================"
echo "üìÖ $(date '+%Y-%m-%d %H:%M:%S')"
echo "================================"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

# 1. HEYGEN –ú–ò–ö–°–´
echo -e "${BLUE}üé¨ HEYGEN –ú–ò–ö–°–´:${NC}"
if [ -d "HEYGEN_READY_BATCH" ]; then
    mix_count=$(find HEYGEN_READY_BATCH -name "heygen_mix_*" -type d | wc -l)
    echo -e "${GREEN}   ‚úÖ –ì–æ—Ç–æ–≤–æ: $mix_count/20 –º–∏–∫—Å–æ–≤${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –º–∏–∫—Å–∞
    for i in $(seq -f "%02g" 1 20); do
        mix_dir="HEYGEN_READY_BATCH/heygen_mix_$i"
        if [ -d "$mix_dir" ]; then
            audio_file="$mix_dir/audio_$i.wav"
            photo_file=$(find "$mix_dir" -name "photo_$i.*" | head -1)
            json_file="$mix_dir/heygen_instruction.json"
            
            if [ -f "$audio_file" ] && [ -f "$photo_file" ] && [ -f "$json_file" ]; then
                echo -e "${GREEN}   ‚úÖ –ú–∏–∫—Å $i: –ü–æ–ª–Ω—ã–π${NC}"
            else
                echo -e "${RED}   ‚ùå –ú–∏–∫—Å $i: –ù–µ–ø–æ–ª–Ω—ã–π${NC}"
            fi
        else
            echo -e "${RED}   ‚ùå –ú–∏–∫—Å $i: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
        fi
    done
else
    echo -e "${RED}   ‚ùå –ü–∞–ø–∫–∞ HEYGEN_READY_BATCH –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""

# 2. –ì–û–¢–û–í–´–ï –í–ò–î–ï–û
echo -e "${BLUE}üé• –ì–û–¢–û–í–´–ï –í–ò–î–ï–û:${NC}"
if [ -d "lipsync" ]; then
    video_count=$(find lipsync -name "*.mp4" -not -path "*/4k_upscaled/*" | wc -l)
    echo -e "${GREEN}   ‚úÖ –ì–æ—Ç–æ–≤–æ: $video_count –≤–∏–¥–µ–æ${NC}"
    
    # 4K –≤–µ—Ä—Å–∏–∏
    if [ -d "lipsync/4k_upscaled" ]; then
        upscaled_count=$(find lipsync/4k_upscaled -name "*.mp4" | wc -l)
        echo -e "${GREEN}   ‚úÖ 4K –≤–µ—Ä—Å–∏–∏: $upscaled_count –≤–∏–¥–µ–æ${NC}"
    fi
    
    # –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
    echo -e "${BLUE}   üìä –†–∞–∑–º–µ—Ä—ã –≤–∏–¥–µ–æ:${NC}"
    find lipsync -name "*.mp4" -not -path "*/4k_upscaled/*" -exec ls -lh {} \; | awk '{print "      " $5 " - " $9}' | head -5
    if [ $video_count -gt 5 ]; then
        echo "      ... –∏ –µ—â–µ $((video_count - 5)) –≤–∏–¥–µ–æ"
    fi
else
    echo -e "${RED}   ‚ùå –ü–∞–ø–∫–∞ lipsync –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""

# 3. –ú–ï–î–ò–ê –ë–ò–ë–õ–ò–û–¢–ï–ö–ê
echo -e "${BLUE}üìö –ú–ï–î–ò–ê –ë–ò–ë–õ–ò–û–¢–ï–ö–ê:${NC}"
if [ -d "ALL_TRACK_PHOTOS" ]; then
    photo_count=$(find ALL_TRACK_PHOTOS -name "*.jpg" -o -name "*.png" | wc -l)
    echo -e "${GREEN}   ‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: $photo_count —Ñ–∞–π–ª–æ–≤${NC}"
else
    echo -e "${RED}   ‚ùå –ü–∞–ø–∫–∞ ALL_TRACK_PHOTOS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

if [ -d "VOICE_TRACKS" ]; then
    audio_count=$(find VOICE_TRACKS -name "*.wav" -o -name "*.mp3" | wc -l)
    echo -e "${GREEN}   ‚úÖ –ê—É–¥–∏–æ —Ç—Ä–µ–∫–∏: $audio_count —Ñ–∞–π–ª–æ–≤${NC}"
else
    echo -e "${RED}   ‚ùå –ü–∞–ø–∫–∞ VOICE_TRACKS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""

# 4. –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø
echo -e "${BLUE}üîß –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø:${NC}"
if [ -d "code" ]; then
    script_count=$(find code -name "*.py" | wc -l)
    echo -e "${GREEN}   ‚úÖ Python —Å–∫—Ä–∏–ø—Ç—ã: $script_count —Ñ–∞–π–ª–æ–≤${NC}"
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–∫—Ä–∏–ø—Ç—ã
    critical_scripts=(
        "code/heygen_api_automator.py"
        "code/professional_lip_sync_automation.py"
        "code/comfy_upscaler_fixed.py"
        "code/create_heygen_batch.py"
    )
    
    echo -e "${BLUE}   üéØ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–∫—Ä–∏–ø—Ç—ã:${NC}"
    for script in "${critical_scripts[@]}"; do
        if [ -f "$script" ]; then
            echo -e "${GREEN}      ‚úÖ $(basename "$script")${NC}"
        else
            echo -e "${RED}      ‚ùå $(basename "$script")${NC}"
        fi
    done
else
    echo -e "${RED}   ‚ùå –ü–∞–ø–∫–∞ code –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""

# 5. –ü–†–û–ì–†–ï–°–° –ü–†–û–ï–ö–¢–ê
echo -e "${BLUE}üìà –ü–†–û–ì–†–ï–°–° –ü–†–û–ï–ö–¢–ê:${NC}"
total_progress=0

# HeyGen –º–∏–∫—Å—ã (25%)
if [ -d "HEYGEN_READY_BATCH" ]; then
    mix_count=$(find HEYGEN_READY_BATCH -name "heygen_mix_*" -type d | wc -l)
    mix_progress=$((mix_count * 25 / 20))
    total_progress=$((total_progress + mix_progress))
    echo -e "${GREEN}   ‚úÖ HeyGen –º–∏–∫—Å—ã: $mix_count/20 ($mix_progress%)${NC}"
fi

# –ì–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ (50%)
if [ -d "lipsync" ]; then
    video_count=$(find lipsync -name "*.mp4" -not -path "*/4k_upscaled/*" | wc -l)
    video_progress=$((video_count * 50 / 20))
    total_progress=$((total_progress + video_progress))
    echo -e "${GREEN}   ‚úÖ –ì–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ: $video_count/20 ($video_progress%)${NC}"
fi

# 4K –∞–ø—Å–∫–µ–π–ª–∏–Ω–≥ (15%)
if [ -d "lipsync/4k_upscaled" ]; then
    upscaled_count=$(find lipsync/4k_upscaled -name "*.mp4" | wc -l)
    upscaled_progress=$((upscaled_count * 15 / 20))
    total_progress=$((total_progress + upscaled_progress))
    echo -e "${GREEN}   ‚úÖ 4K –∞–ø—Å–∫–µ–π–ª–∏–Ω–≥: $upscaled_count/20 ($upscaled_progress%)${NC}"
fi

# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è (10%)
if [ -d "code" ]; then
    total_progress=$((total_progress + 10))
    echo -e "${GREEN}   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: 100% (10%)${NC}"
fi

echo ""
echo -e "${BLUE}üéØ –û–ë–©–ò–ô –ü–†–û–ì–†–ï–°–°: ${total_progress}%${NC}"

# –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
progress_bar=""
for i in $(seq 1 10); do
    if [ $((i * 10)) -le $total_progress ]; then
        progress_bar="${progress_bar}‚ñà"
    else
        progress_bar="${progress_bar}‚ñë"
    fi
done
echo -e "${GREEN}   [$progress_bar] $total_progress%${NC}"

echo ""

# 6. –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò
echo -e "${BLUE}üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:${NC}"
if [ $total_progress -lt 100 ]; then
    if [ -d "HEYGEN_READY_BATCH" ]; then
        mix_count=$(find HEYGEN_READY_BATCH -name "heygen_mix_*" -type d | wc -l)
        if [ $mix_count -eq 20 ]; then
            video_count=$(find lipsync -name "*.mp4" -not -path "*/4k_upscaled/*" | wc -l)
            if [ $video_count -lt 20 ]; then
                remaining=$((20 - video_count))
                echo -e "${YELLOW}   üé¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ: –æ—Å—Ç–∞–ª–æ—Å—å $remaining –≤–∏–¥–µ–æ${NC}"
                echo -e "${BLUE}   üí° –ö–æ–º–∞–Ω–¥–∞: cd code && python heygen_api_automator.py${NC}"
            fi
        fi
    fi
    
    if [ -d "lipsync" ]; then
        video_count=$(find lipsync -name "*.mp4" -not -path "*/4k_upscaled/*" | wc -l)
        if [ -d "lipsync/4k_upscaled" ]; then
            upscaled_count=$(find lipsync/4k_upscaled -name "*.mp4" | wc -l)
            if [ $upscaled_count -lt $video_count ]; then
                remaining=$((video_count - upscaled_count))
                echo -e "${YELLOW}   üîß 4K –∞–ø—Å–∫–µ–π–ª–∏–Ω–≥: –æ—Å—Ç–∞–ª–æ—Å—å $remaining –≤–∏–¥–µ–æ${NC}"
                echo -e "${BLUE}   üí° –ö–æ–º–∞–Ω–¥–∞: cd code && python comfy_upscaler_fixed.py${NC}"
            fi
        fi
    fi
else
    echo -e "${GREEN}   üéâ –ü–†–û–ï–ö–¢ –ó–ê–í–ï–†–®–ï–ù! –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!${NC}"
    echo -e "${BLUE}   üì¶ –°–æ–∑–¥–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–ª–∏–∑${NC}"
fi

echo ""
echo "================================"
echo -e "${GREEN}üïâÔ∏è –û–º –®–∞–Ω—Ç–∏. –ü—É—Ç—å —è—Å–µ–Ω.${NC}"
echo "================================" 