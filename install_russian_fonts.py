#!/usr/bin/env python3
"""
–£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —Ç–æ–ø–æ–≤—ã—Ö —Ä—É—Å—Å–∫–∏—Ö –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è Figma
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞—á–∏–≤–∞–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ª—É—á—à–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Ä—É—Å—Å–∫–∏—Ö —à—Ä–∏—Ñ—Ç–æ–≤
"""

import os
import requests
import zipfile
import platform
from pathlib import Path
import shutil

class RussianFontsInstaller:
    def __init__(self):
        self.system = platform.system()
        self.font_dir = self.get_font_directory()
        self.temp_dir = Path("temp_fonts")
        self.temp_dir.mkdir(exist_ok=True)
    
    def get_font_directory(self):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤"""
        if self.system == "Darwin":  # macOS
            return Path.home() / "Library" / "Fonts"
        elif self.system == "Windows":
            return Path(os.environ.get("WINDIR", "C:\\Windows")) / "Fonts"
        else:  # Linux
            return Path.home() / ".local" / "share" / "fonts"
    
    def download_font_collection(self, url, filename):
        """–°–∫–∞—á–∏–≤–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é —à—Ä–∏—Ñ—Ç–æ–≤"""
        print(f"üì• –°–∫–∞—á–∏–≤–∞—é {filename}...")
        try:
            response = requests.get(url, stream=True)
            response.raise_for_status()
            
            file_path = self.temp_dir / filename
            with open(file_path, 'wb') as f:
                for chunk in response.iter_content(chunk_size=8192):
                    f.write(chunk)
            
            print(f"‚úÖ –°–∫–∞—á–∞–Ω–æ: {filename}")
            return file_path
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {filename}: {e}")
            return None
    
    def install_font_files(self, font_files):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∞–π–ª—ã —à—Ä–∏—Ñ—Ç–æ–≤"""
        installed_count = 0
        for font_file in font_files:
            try:
                if font_file.suffix.lower() in ['.ttf', '.otf']:
                    dest_path = self.font_dir / font_file.name
                    shutil.copy2(font_file, dest_path)
                    print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {font_file.name}")
                    installed_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {font_file.name}: {e}")
        
        return installed_count
    
    def install_top_russian_fonts(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–æ–ø–æ–≤—ã–µ —Ä—É—Å—Å–∫–∏–µ —à—Ä–∏—Ñ—Ç—ã"""
        print("üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ø–æ–≤—ã—Ö —Ä—É—Å—Å–∫–∏—Ö –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è Figma")
        print("=" * 60)
        
        # –°–ø–∏—Å–æ–∫ –ª—É—á—à–∏—Ö —Ä—É—Å—Å–∫–∏—Ö —à—Ä–∏—Ñ—Ç–æ–≤ —Å –ø—Ä—è–º—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
        font_collections = [
            {
                "name": "–ë–∞–∑–æ–≤–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —Ä—É—Å—Å–∫–∏—Ö —à—Ä–∏—Ñ—Ç–æ–≤",
                "fonts": [
                    "https://fonts.gstatic.com/s/ptsans/v17/jizaRExUiTo99u79D0KExcOPIDU.woff2",
                    "https://fonts.gstatic.com/s/ptserif/v18/EJRVQgYoZZs2vCFuvAFWzr-_dSb_nco.woff2",
                    "https://fonts.gstatic.com/s/philosopher/v20/vEFV2_5QCwIS4_Dhez5jcWBuT0s.woff2",
                    "https://fonts.gstatic.com/s/comfortaa/v45/1Pt_g8LJRfWJmhDAuUsSQamb1W0lwk4S4WjNPrQVIT9c2c8.woff2",
                    "https://fonts.gstatic.com/s/play/v19/6xKtrZULGlNBfMHgAaMC9Ow.woff2",
                ]
            }
        ]
        
        # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –ª—É—á—à–∏–º–∏ —Ä—É—Å—Å–∫–∏–º–∏ —à—Ä–∏—Ñ—Ç–∞–º–∏
        self.create_local_font_files()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã
        font_files = list(self.temp_dir.glob("*.ttf")) + list(self.temp_dir.glob("*.otf"))
        if font_files:
            installed = self.install_font_files(font_files)
            print(f"\nüéâ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {installed} —Ä—É—Å—Å–∫–∏—Ö —à—Ä–∏—Ñ—Ç–æ–≤!")
        
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        shutil.rmtree(self.temp_dir, ignore_errors=True)
        
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Figma:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Figma")
        print("2. –®—Ä–∏—Ñ—Ç—ã –ø–æ—è–≤—è—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤")
        print("3. –ò—â–∏—Ç–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º: PT Sans, PT Serif, Philosopher, Comfortaa, Play")
        
        if self.system == "Darwin":
            print("\nüí° –î–ª—è macOS: –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Font Book –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à—Ä–∏—Ñ—Ç–∞–º–∏")
        
        return True
    
    def create_local_font_files(self):
        """–°–æ–∑–¥–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ —Ä—É—Å—Å–∫–∏–º–∏ —à—Ä–∏—Ñ—Ç–∞–º–∏"""
        # –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä—É—Å—Å–∫–∏–µ —à—Ä–∏—Ñ—Ç—ã
        font_urls = {
            # –ò–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Google Fonts —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
            "PT_Sans.ttf": "https://github.com/google/fonts/raw/main/ofl/ptsans/PTSans-Regular.ttf",
            "PT_Sans_Bold.ttf": "https://github.com/google/fonts/raw/main/ofl/ptsans/PTSans-Bold.ttf",
            "PT_Serif.ttf": "https://github.com/google/fonts/raw/main/ofl/ptserif/PTSerif-Regular.ttf",
            "PT_Serif_Bold.ttf": "https://github.com/google/fonts/raw/main/ofl/ptserif/PTSerif-Bold.ttf",
            "Philosopher.ttf": "https://github.com/google/fonts/raw/main/ofl/philosopher/Philosopher-Regular.ttf",
            "Philosopher_Bold.ttf": "https://github.com/google/fonts/raw/main/ofl/philosopher/Philosopher-Bold.ttf",
            "Comfortaa.ttf": "https://github.com/google/fonts/raw/main/ofl/comfortaa/Comfortaa%5Bwght%5D.ttf",
            "Play.ttf": "https://github.com/google/fonts/raw/main/ofl/play/Play-Regular.ttf",
            "Play_Bold.ttf": "https://github.com/google/fonts/raw/main/ofl/play/Play-Bold.ttf",
            "Neucha.ttf": "https://github.com/google/fonts/raw/main/ofl/neucha/Neucha-Regular.ttf",
            "BadScript.ttf": "https://github.com/google/fonts/raw/main/ofl/badscript/BadScript-Regular.ttf",
            "Cuprum.ttf": "https://github.com/google/fonts/raw/main/ofl/cuprum/Cuprum%5Bwght%5D.ttf",
        }
        
        print("üì• –°–∫–∞—á–∏–≤–∞—é —Ç–æ–ø–æ–≤—ã–µ —Ä—É—Å—Å–∫–∏–µ —à—Ä–∏—Ñ—Ç—ã...")
        for filename, url in font_urls.items():
            try:
                response = requests.get(url, timeout=30)
                if response.status_code == 200:
                    with open(self.temp_dir / filename, 'wb') as f:
                        f.write(response.content)
                    print(f"‚úÖ {filename}")
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å {filename}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ {filename}: {e}")

def main():
    installer = RussianFontsInstaller()
    
    print("üé® –£–°–¢–ê–ù–û–í–©–ò–ö –¢–û–ü–û–í–´–• –†–£–°–°–ö–ò–• –®–†–ò–§–¢–û–í")
    print("=" * 50)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –ª—É—á—à–∏–µ —Ä—É—Å—Å–∫–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –¥–ª—è Figma")
    print("–í–∫–ª—é—á–∞–µ—Ç: PT Sans, PT Serif, Philosopher, Comfortaa, Play, Neucha –∏ –¥—Ä—É–≥–∏–µ")
    print()
    
    confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/n): ").lower().strip()
    if confirm in ['y', 'yes', '–¥–∞', '–¥']:
        installer.install_top_russian_fonts()
        print("\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Figma –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤.")
    else:
        print("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")

if __name__ == "__main__":
    main() 