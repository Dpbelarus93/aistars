#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üé¨ SIMPLE VIDEO CREATOR
–°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ –±–µ–∑ FFmpeg - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
"""

import shutil
import subprocess
from pathlib import Path
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - üé¨ %(message)s')

class SimpleVideoCreator:
    """üé¨ –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ"""
    
    def __init__(self):
        self.workspace = Path("LIP_SYNC_WORKSPACE")
        self.photos = self.workspace / "input_photos"
        self.audio = self.workspace / "input_audio"
        self.output = self.workspace / "simple_videos"
        
        self.output.mkdir(exist_ok=True)
        self.logger = logging.getLogger("SimpleVideo")
    
    def check_system_tools(self):
        """üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π ffmpeg (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
        try:
            result = subprocess.run(['which', 'ffmpeg'], 
                                  capture_output=True, text=True)
            if result.returncode == 0:
                self.logger.info("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π FFmpeg –Ω–∞–π–¥–µ–Ω")
                return "ffmpeg"
        except:
            pass
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º QuickTime Player (macOS)
        try:
            result = subprocess.run(['which', 'osascript'], 
                                  capture_output=True, text=True)
            if result.returncode == 0:
                self.logger.info("‚úÖ AppleScript –¥–æ—Å—Ç—É–ø–µ–Ω")
                return "applescript"
        except:
            pass
        
        self.logger.warning("‚ö†Ô∏è –í–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return None
    
    def create_simple_slideshow(self, photo_path: Path, audio_path: Path, output_path: Path):
        """üé¨ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–ª–∞–π–¥-—à–æ—É"""
        
        try:
            # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–æ—Ç–æ –≤ –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É
            photo_copy = output_path.parent / f"{output_path.stem}_photo.jpg"
            shutil.copy2(photo_path, photo_copy)
            
            # –ö–æ–ø–∏—Ä—É–µ–º –∞—É–¥–∏–æ –≤ –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É  
            audio_copy = output_path.parent / f"{output_path.stem}_audio.wav"
            shutil.copy2(audio_path, audio_copy)
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
            instruction = output_path.parent / f"{output_path.stem}_instruction.txt"
            with open(instruction, 'w', encoding='utf-8') as f:
                f.write(f"""
üé¨ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –í–ò–î–ï–û

üì∏ –§–æ—Ç–æ: {photo_copy.name}
üéµ –ê—É–¥–∏–æ: {audio_copy.name}
üìπ –†–µ–∑—É–ª—å—Ç–∞—Ç: {output_path.name}

üõ†Ô∏è –°–ü–û–°–û–ë–´ –°–û–ó–î–ê–ù–ò–Ø:

1Ô∏è‚É£ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò (–µ—Å–ª–∏ –µ—Å—Ç—å FFmpeg):
   ffmpeg -loop 1 -i "{photo_copy.name}" -i "{audio_copy.name}" -c:v libx264 -c:a aac -shortest -pix_fmt yuv420p "{output_path.name}"

2Ô∏è‚É£ –í–†–£–ß–ù–£–Æ:
   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–æ—Ç–æ –≤ –ª—é–±–æ–º –≤–∏–¥–µ–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –∞—É–¥–∏–æ –¥–æ—Ä–æ–∂–∫—É
   ‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–∞–∫ MP4

3Ô∏è‚É£ –û–ù–õ–ê–ô–ù:
   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ Canva/CapCut/InShot
   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –≤–∏–¥–µ–æ –∏–∑ —Ñ–æ—Ç–æ + –∞—É–¥–∏–æ
   
üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í–∏–¥–µ–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é {self.get_audio_duration(audio_path)} —Å–µ–∫—É–Ω–¥
""")
            
            self.logger.info(f"üìã –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {instruction.name}")
            return True
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False
    
    def get_audio_duration(self, audio_path: Path) -> str:
        """‚è±Ô∏è –ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ"""
        try:
            size_mb = audio_path.stat().st_size / (1024 * 1024)
            # –ü—Ä–∏–º–µ—Ä–Ω–æ 1MB = 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è WAV
            duration = int(size_mb * 10)
            return f"~{duration}"
        except:
            return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    
    def process_all(self):
        """üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π"""
        
        tool = self.check_system_tools()
        
        photos = list(self.photos.glob("*.jpg")) + list(self.photos.glob("*.png"))
        audios = list(self.audio.glob("*.wav"))
        
        self.logger.info(f"üì∏ –ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ç–æ: {len(photos)}")
        self.logger.info(f"üéµ –ù–∞–π–¥–µ–Ω–æ –∞—É–¥–∏–æ: {len(audios)}")
        
        created = 0
        total = min(len(photos), 3) * min(len(audios), 2)  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è –¥–µ–º–æ
        
        for i, photo in enumerate(photos[:3]):  # –ü–µ—Ä–≤—ã–µ 3 —Ñ–æ—Ç–æ
            for j, audio in enumerate(audios[:2]):  # –ü–µ—Ä–≤—ã–µ 2 –∞—É–¥–∏–æ
                
                output_name = f"video_{i+1:02d}_{j+1}_{photo.stem}_{audio.stem}.mp4"
                output_path = self.output / output_name
                
                if self.create_simple_slideshow(photo, audio, output_path):
                    created += 1
                
                self.logger.info(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {created}/{total}")
        
        self.logger.info(f"üéâ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {created} –∫–æ–º–ø–ª–µ–∫—Ç–æ–≤ –¥–ª—è –≤–∏–¥–µ–æ!")
        return created

def main():
    print("üé¨" * 50)
    print("üé≠ SIMPLE VIDEO CREATOR")
    print("–ì–æ—Ç–æ–≤–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –≤–∏–¥–µ–æ!")
    print("üé¨" * 50)
    
    creator = SimpleVideoCreator()
    created = creator.process_all()
    
    if created > 0:
        print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {created} –∫–æ–º–ø–ª–µ–∫—Ç–æ–≤")
        print(f"üìÅ –ü–∞–ø–∫–∞: {creator.output}")
        print("üìã –í –∫–∞–∂–¥–æ–º –∫–æ–º–ø–ª–µ–∫—Ç–µ: —Ñ–æ—Ç–æ + –∞—É–¥–∏–æ + –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
        print("\nüõ†Ô∏è –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg: /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"")
        print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–Ω–ª–∞–π–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (Canva, CapCut)")
        print("3. –ò–ª–∏ –ª—é–±–æ–π –≤–∏–¥–µ–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä (iMovie, DaVinci Resolve)")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã")

if __name__ == "__main__":
    main() 