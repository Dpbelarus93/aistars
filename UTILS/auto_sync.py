#!/usr/bin/env python3
import os
import subprocess
from datetime import datetime
import time
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    filename='auto_sync.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

class GitAutoSync:
    def __init__(self, repo_path):
        self.repo_path = repo_path
        self.tracked_dirs = [
            'TELEGRAM_PARSER_MVP',
            'MEDIA_PROCESSING',
            'PROMPT_LIBRARY',
            'ISTARS_DOCS'
        ]
        
    def run_git_command(self, command):
        try:
            result = subprocess.run(
                command,
                cwd=self.repo_path,
                check=True,
                capture_output=True,
                text=True
            )
            return result.stdout.strip()
        except subprocess.CalledProcessError as e:
            logging.error(f"Git command failed: {e.stderr}")
            return None

    def check_changes(self):
        status = self.run_git_command(['git', 'status', '--porcelain'])
        if not status:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
        changed = False
        for line in status.split('\n'):
            if line:
                for dir in self.tracked_dirs:
                    if dir in line:
                        changed = True
                        break
        return changed

    def sync(self):
        if not self.check_changes():
            logging.info("No changes to sync")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        for dir in self.tracked_dirs:
            self.run_git_command(['git', 'add', dir])

        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        commit_msg = f"üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è [{timestamp}]"
        self.run_git_command(['git', 'commit', '-m', commit_msg])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        self.run_git_command(['git', 'pull', '--rebase', 'origin', 'main'])
        push_result = self.run_git_command(['git', 'push', 'origin', 'main'])
        
        if push_result is not None:
            logging.info(f"Successfully synced changes: {commit_msg}")
        else:
            logging.error("Failed to push changes")

def main():
    repo_path = '/Users/dpbelarus/Desktop/—Ö–æ—á—É –µ—â–µ'
    syncer = GitAutoSync(repo_path)
    
    while True:
        try:
            syncer.sync()
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
            time.sleep(300)
        except Exception as e:
            logging.error(f"Sync error: {str(e)}")
            time.sleep(60)  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –∂–¥–µ–º –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

if __name__ == '__main__':
    main()
