#!/usr/bin/env python3
"""
Simple RAP Cutter - –ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Ä–µ–∑–∫–∞ –±–µ–∑ FFmpeg
–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å WAV, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞–∫ WAV
"""

import os
from pathlib import Path
from pydub import AudioSegment
import sys

def create_rap_segments_wav(audio_file, output_dir):
    """
    –°–æ–∑–¥–∞–µ—Ç RAP —Å–µ–≥–º–µ–Ω—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ WAV (–±–µ–∑ FFmpeg)
    """
    
    audio_path = Path(audio_file)
    
    if not audio_path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_file}")
        return False
    
    output_dir = Path(output_dir)
    output_dir.mkdir(parents=True, exist_ok=True)
    
    print(f"üé§ –ó–∞–≥—Ä—É–∂–∞—é RAP —Ç—Ä–µ–∫: {audio_path.name}")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º WAV —Ñ–∞–π–ª
        print("üì° –ó–∞–≥—Ä—É–∂–∞—é WAV —Ñ–∞–π–ª...")
        audio = AudioSegment.from_wav(str(audio_path))
        total_duration_sec = len(audio) / 1000
        
        print(f"üìä –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {total_duration_sec:.1f} —Å–µ–∫—É–Ω–¥")
        print(f"üìÅ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤: {output_dir}")
        print("üéµ –°–æ–∑–¥–∞—é —Å–µ–≥–º–µ–Ω—Ç—ã –¥–ª—è –ª–∏–ø—Å–∏–Ω–∫–∞...")
        print("=" * 60)
        
        # –ü—Ä–æ—Å—Ç—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã
        segments = [
            {"name": "intro", "start": 0, "duration": 15, "desc": "–ù–∞—á–∞–ª–æ - —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π —Å—Ç–∞—Ä—Ç"},
            {"name": "verse1", "start": 15, "duration": 25, "desc": "–ü–µ—Ä–≤—ã–π –∫—É–ø–ª–µ—Ç"},
            {"name": "hook", "start": 40, "duration": 20, "desc": "–•—É–∫/–ø—Ä–∏–ø–µ–≤"},
            {"name": "verse2", "start": 60, "duration": 30, "desc": "–û—Å–Ω–æ–≤–Ω–æ–π –∫—É–ø–ª–µ—Ç"},
            {"name": "finale", "start": max(0, total_duration_sec - 20), "duration": 20, "desc": "–§–∏–Ω–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å"},
        ]
        
        segment_count = 0
        
        for seg in segments:
            start_sec = seg["start"]
            duration_sec = seg["duration"]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
            if start_sec >= total_duration_sec:
                continue
                
            if start_sec + duration_sec > total_duration_sec:
                duration_sec = total_duration_sec - start_sec
            
            start_ms = int(start_sec * 1000)
            end_ms = int((start_sec + duration_sec) * 1000)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–µ–≥–º–µ–Ω—Ç
            segment = audio[start_ms:end_ms]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ WAV (–±–µ–∑ FFmpeg)
            filename = f"rap_{seg['name']}_{duration_sec:.0f}s.wav"
            segment_path = output_dir / filename
            
            print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è—é: {filename}")
            segment.export(str(segment_path), format="wav")
            
            segment_count += 1
            print(f"üé§ –°–µ–≥–º–µ–Ω—Ç {segment_count}: {filename}")
            print(f"   üìù {seg['desc']}")
            print(f"   ‚è±Ô∏è  {start_sec:.1f}—Å - {start_sec + duration_sec:.1f}—Å ({duration_sec:.1f}—Å)")
            print()
        
        print("=" * 60)
        print(f"üéâ –ì–û–¢–û–í–û! –°–æ–∑–¥–∞–Ω–æ {segment_count} RAP-—Å–µ–≥–º–µ–Ω—Ç–æ–≤!")
        print(f"üìÅ –í—Å–µ —Ñ–∞–π–ª—ã –≤: {output_dir}")
        print()
        print("üí° –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
        print("   üé§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–µ–≥–º–µ–Ω—Ç")
        print("   üé¨ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤ AI –¥–ª—è –ª–∏–ø—Å–∏–Ω–∫–∞")
        print("   üöÄ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫—Ä—É—Ç—ã–µ –≤–∏–¥–µ–æ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üé§ SIMPLE RAP CUTTER")
    print("–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Ä–µ–∑–∫–∞ –¥–ª—è –ª–∏–ø—Å–∏–Ω–∫–∞")
    print("=" * 50)
    
    # –§–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    source_file = Path("../–ê—É–¥–∏–æ —Ç—Ä–µ–∫–∏/–Ø –≤ –ø–æ—Ç–æ–∫–µ, –Ω–µ—Ç —è –≤ —Ç–æ–ø–µ ,.wav")
    
    if not source_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {source_file}")
        return
    
    # –ü–∞–ø–∫–∞ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ
    desktop_path = Path.home() / "Desktop"
    output_dir = desktop_path / "—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –º—É–∑—ã–∫–æ–π"
    
    print(f"üéØ –§–∞–π–ª: {source_file.name}")
    print(f"üìÇ –ü–∞–ø–∫–∞: {output_dir}")
    
    create_rap_segments_wav(source_file, output_dir)

if __name__ == "__main__":
    main() 