#!/usr/bin/env python3
"""
üé¨ VIDEO LIP SYNC HELPER üé¨
–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –≤–∏–¥–µ–æ –∫ –ª–∏–ø—Å–∏–Ω–∫—É
–í—ã–±–∏—Ä–∞–µ–º –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ, –≥–æ—Ç–æ–≤–∏–º –∫ –∑–∞–≥—Ä—É–∑–∫–µ!
"""

import os
import shutil
from pathlib import Path
import random

def show_available_videos():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ 4K –≤–∏–¥–µ–æ
    """
    video_dir = Path.home() / "Desktop" / "—Ö–æ—á—É –µ—â–µ" / "–≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ"
    
    if not video_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ —Å –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return []
    
    # –ò—â–µ–º MP4 —Ñ–∞–π–ª—ã
    video_files = list(video_dir.glob("*.mp4"))
    
    if not video_files:
        print("‚ùå MP4 —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return []
    
    print(f"üé¨ –ù–ê–ô–î–ï–ù–û {len(video_files)} –í–ò–î–ï–û:")
    print("=" * 50)
    
    for i, video in enumerate(sorted(video_files)[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
        size_mb = video.stat().st_size / (1024 * 1024)
        print(f"{i:2d}. {video.name} ({size_mb:.1f} MB)")
    
    if len(video_files) > 10:
        print(f"    ... –∏ –µ—â–µ {len(video_files) - 10} –≤–∏–¥–µ–æ")
    
    return sorted(video_files)

def show_available_audio():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã –¥–ª—è –ª–∏–ø—Å–∏–Ω–∫–∞
    """
    audio_dir = Path.home() / "Desktop" / "—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –º—É–∑—ã–∫–æ–π" / "professional_vocals"
    
    if not audio_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ —Å –≥–æ–ª–æ—Å–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return []
    
    # –ò—â–µ–º MP3 —Ñ–∞–π–ª—ã —Å –≥–æ–ª–æ—Å–æ–º
    audio_files = list(audio_dir.glob("vocals_*.mp3"))
    
    if not audio_files:
        print("‚ùå –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return []
    
    print(f"üé§ –ù–ê–ô–î–ï–ù–û {len(audio_files)} –ê–£–î–ò–û:")
    print("=" * 50)
    
    for i, audio in enumerate(sorted(audio_files)[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
        size_kb = audio.stat().st_size / 1024
        print(f"{i:2d}. {audio.name} ({size_kb:.0f} KB)")
    
    if len(audio_files) > 10:
        print(f"    ... –∏ –µ—â–µ {len(audio_files) - 10} –∞—É–¥–∏–æ")
    
    return sorted(audio_files)

def copy_to_desktop(file_path):
    """
    –ö–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª –¥–ª—è —É–¥–æ–±–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    """
    desktop = Path.home() / "Desktop"
    target = desktop / file_path.name
    
    # –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ –µ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å
    counter = 1
    while target.exists():
        stem = file_path.stem
        suffix = file_path.suffix
        target = desktop / f"{stem}_{counter}{suffix}"
        counter += 1
    
    shutil.copy2(file_path, target)
    return target

def main():
    print("üé¨ VIDEO LIP SYNC HELPER")
    print("–ì–æ—Ç–æ–≤–∏–º –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ –¥–ª—è –ª–∏–ø—Å–∏–Ω–∫–∞!")
    print("=" * 50)
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
    print("üìπ –î–û–°–¢–£–ü–ù–´–ï –í–ò–î–ï–û:")
    videos = show_available_videos()
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞—É–¥–∏–æ  
    print("üé§ –î–û–°–¢–£–ü–ù–´–ï –ê–£–î–ò–û:")
    audios = show_available_audio()
    print()
    
    if not videos or not audios:
        print("‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏–ø—Å–∏–Ω–∫–∞!")
        return
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –¥–µ–º–æ
    selected_video = random.choice(videos)
    selected_audio = random.choice(audios)
    
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–ê–Ø –ö–û–ú–ë–ò–ù–ê–¶–ò–Ø:")
    print("=" * 50)
    print(f"üìπ –í–∏–¥–µ–æ: {selected_video.name}")
    print(f"üé§ –ê—É–¥–∏–æ: {selected_audio.name}")
    print()
    
    # –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª
    print("üìÅ –ö–û–ü–ò–†–£–Æ –ù–ê –†–ê–ë–û–ß–ò–ô –°–¢–û–õ...")
    
    video_copy = copy_to_desktop(selected_video)
    audio_copy = copy_to_desktop(selected_audio)
    
    print(f"‚úÖ –í–∏–¥–µ–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: {video_copy.name}")
    print(f"‚úÖ –ê—É–¥–∏–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: {audio_copy.name}")
    print()
    
    print("üöÄ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –õ–ò–ü–°–ò–ù–ö–ê:")
    print("=" * 50)
    print("1. üìπ –ó–∞–≥—Ä—É–∑–∏ –≤–∏–¥–µ–æ –≤ AI –ø–ª–∞—Ç—Ñ–æ—Ä–º—É")
    print("2. üé§ –ó–∞–≥—Ä—É–∑–∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª")
    print("3. üé¨ –ó–∞–ø—É—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ª–∏–ø—Å–∏–Ω–∫–∞")
    print("4. ‚è∞ –ñ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!")
    print()
    print("üí° –§–ê–ô–õ–´ –ù–ê –†–ê–ë–û–ß–ï–ú –°–¢–û–õ–ï –ì–û–¢–û–í–´ –ö –ó–ê–ì–†–£–ó–ö–ï!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
    video_size = video_copy.stat().st_size / (1024 * 1024)
    audio_size = audio_copy.stat().st_size / 1024
    
    print()
    print("üìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –§–ê–ô–õ–ê–•:")
    print(f"üìπ –í–∏–¥–µ–æ: {video_size:.1f} MB (4K –∫–∞—á–µ—Å—Ç–≤–æ)")
    print(f"üé§ –ê—É–¥–∏–æ: {audio_size:.0f} KB (—á–∏—Å—Ç—ã–π –≥–æ–ª–æ—Å)")
    print(f"‚è±Ô∏è  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ~5 —Å–µ–∫—É–Ω–¥")

if __name__ == "__main__":
    main() 