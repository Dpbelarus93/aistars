#!/usr/bin/env python3
"""
‚úÇÔ∏è RAP 10SEC CUTTER ‚úÇÔ∏è
–ù–∞—Ä–µ–∑–∞–µ–º —Ç—Ä–µ–∫ –Ω–∞ 10-—Å–µ–∫—É–Ω–¥–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã
–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏!

–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é AI!
"""

import wave
import numpy as np
from pathlib import Path
import shutil

def load_audio_simple(file_path):
    """
    –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ WAV —Ñ–∞–π–ª–∞
    """
    try:
        with wave.open(str(file_path), 'rb') as wav_file:
            frames = wav_file.readframes(-1)
            sample_rate = wav_file.getframerate()
            channels = wav_file.getnchannels()
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ numpy array
            audio_data = np.frombuffer(frames, dtype=np.int16)
            
            # –ï—Å–ª–∏ —Å—Ç–µ—Ä–µ–æ, –±–µ—Ä–µ–º —Å—Ä–µ–¥–Ω–µ–µ
            if channels == 2:
                audio_data = audio_data.reshape(-1, 2)
                audio_data = np.mean(audio_data, axis=1)
            
            # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫ [-1, 1]
            audio_data = audio_data.astype(np.float32) / 32768.0
            
            return audio_data, sample_rate
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ: {e}")
        return None, None

def save_audio_segment(audio_data, sample_rate, start_time, end_time, output_file):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–µ–≥–º–µ–Ω—Ç –∞—É–¥–∏–æ
    """
    try:
        start_sample = int(start_time * sample_rate)
        end_sample = int(end_time * sample_rate)
        
        segment = audio_data[start_sample:end_sample]
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ int16
        segment_int16 = (segment * 32767).astype(np.int16)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ WAV
        with wave.open(str(output_file), 'wb') as wav_file:
            wav_file.setnchannels(1)  # –ú–æ–Ω–æ
            wav_file.setsampwidth(2)  # 16-bit
            wav_file.setframerate(sample_rate)
            wav_file.writeframes(segment_int16.tobytes())
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False

def delete_old_folders():
    """
    –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏ —Å —Å–µ–≥–º–µ–Ω—Ç–∞–º–∏
    """
    music_dir = Path.home() / "Desktop" / "—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –º—É–∑—ã–∫–æ–π"
    
    folders_to_delete = [
        "vocals_only",
        "professional_vocals", 
        "vocals_6sec_segments"
    ]
    
    print("üóëÔ∏è  –£–î–ê–õ–Ø–Æ –°–¢–ê–†–´–ï –ü–ê–ü–ö–ò:")
    print("=" * 40)
    
    for folder_name in folders_to_delete:
        folder_path = music_dir / folder_name
        if folder_path.exists():
            try:
                shutil.rmtree(folder_path)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞: {folder_name}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {folder_name}: {e}")
        else:
            print(f"‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–∞: {folder_name}")
    
    print()

def create_10sec_segments():
    """
    –°–æ–∑–¥–∞–µ—Ç 10-—Å–µ–∫—É–Ω–¥–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã
    """
    
    # –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–∫ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ
    base_dir = Path.home() / "Desktop" / "—Ö–æ—á—É –µ—â–µ"
    rap_file = base_dir / "–ê—É–¥–∏–æ —Ç—Ä–µ–∫–∏" / "–Ø –≤ –ø–æ—Ç–æ–∫–µ, –Ω–µ—Ç —è –≤ —Ç–æ–ø–µ ,.wav"
    
    if not rap_file.exists():
        print("‚ùå –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π RAP —Ç—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print(f"   –ò—â—É: {rap_file}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è 10-—Å–µ–∫—É–Ω–¥–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤
    output_dir = base_dir / "rap_10sec_segments"
    if output_dir.exists():
        shutil.rmtree(output_dir)
    output_dir.mkdir(exist_ok=True)
    
    print("‚úÇÔ∏è RAP 10SEC CUTTER")
    print("=" * 50)
    print(f"üéµ –¢—Ä–µ–∫: {rap_file.name}")
    print(f"üìÅ –í—ã—Ö–æ–¥: {output_dir.name}")
    print()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ
    print("üîÑ –ó–∞–≥—Ä—É–∂–∞—é –∞—É–¥–∏–æ...")
    audio_data, sample_rate = load_audio_simple(rap_file)
    
    if audio_data is None:
        return False
    
    duration = len(audio_data) / sample_rate
    print(f"‚è±Ô∏è  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration:.1f} —Å–µ–∫—É–Ω–¥")
    print()
    
    # –ù–∞—Ä–µ–∑–∞–µ–º –Ω–∞ 10-—Å–µ–∫—É–Ω–¥–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã
    print("‚úÇÔ∏è  –ù–ê–†–ï–ó–ê–Æ 10-–°–ï–ö–£–ù–î–ù–´–ï –°–ï–ì–ú–ï–ù–¢–´:")
    print("=" * 60)
    
    segment_duration = 10.0  # 10 —Å–µ–∫—É–Ω–¥
    current_time = 0
    segment_count = 0
    
    while current_time < duration - 1:  # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å 1 —Å–µ–∫—É–Ω–¥–∞
        
        end_time = min(current_time + segment_duration, duration)
        actual_duration = end_time - current_time
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–µ–≥–º–µ–Ω—Ç—ã
        if actual_duration < 5:
            break
            
        segment_count += 1
        
        # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        start_min = int(current_time // 60)
        start_sec = int(current_time % 60)
        end_min = int(end_time // 60)
        end_sec = int(end_time % 60)
        
        filename = f"rap_10sec_{segment_count:03d}_{start_min:02d}m{start_sec:02d}s-{end_min:02d}m{end_sec:02d}s.wav"
        output_file = output_dir / filename
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ–≥–º–µ–Ω—Ç
        if save_audio_segment(audio_data, sample_rate, current_time, end_time, output_file):
            
            size_kb = output_file.stat().st_size / 1024
            
            print(f"‚úÖ {segment_count:2d}. {filename}")
            print(f"      ‚è±Ô∏è  {current_time:.1f}s - {end_time:.1f}s ({actual_duration:.1f}s)")
            print(f"      üíæ {size_kb:.0f} KB")
            print()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ–≥–º–µ–Ω—Ç–∞ {segment_count}")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–µ–≥–º–µ–Ω—Ç—É
        current_time += segment_duration
    
    print("=" * 60)
    print(f"üéâ –ù–ê–†–ï–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ: {segment_count} —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –ø–æ 10 —Å–µ–∫—É–Ω–¥")
    print(f"üìÅ –ü–∞–ø–∫–∞: {output_dir}")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_time = segment_count * 10
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   üé§ –û–±—â–µ–µ –≤—Ä–µ–º—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤: {total_time} —Å–µ–∫ ({total_time/60:.1f} –º–∏–Ω)")
    print(f"   üéµ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–∫–∞: {duration:.1f} —Å–µ–∫ ({duration/60:.1f} –º–∏–Ω)")
    print(f"   üìà –ü–æ–∫—Ä—ã—Ç–∏–µ: {(total_time/duration)*100:.1f}%")
    print()
    print("üí° –ì–û–¢–û–í–´ –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ –í –õ–ò–ü–°–ò–ù–ö–ï!")
    
    return True

def copy_best_segments_to_desktop():
    """
    –ö–æ–ø–∏—Ä—É–µ—Ç –ª—É—á—à–∏–µ —Å–µ–≥–º–µ–Ω—Ç—ã –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª
    """
    base_dir = Path.home() / "Desktop" / "—Ö–æ—á—É –µ—â–µ"
    segments_dir = base_dir / "rap_10sec_segments"
    desktop = Path.home() / "Desktop"
    
    if not segments_dir.exists():
        return
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å–µ–≥–º–µ–Ω—Ç–∞
    segment_files = sorted(list(segments_dir.glob("rap_10sec_*.wav")))[:3]
    
    if not segment_files:
        return
    
    print("üìÅ –ö–û–ü–ò–†–£–Æ –õ–£–ß–®–ò–ï –°–ï–ì–ú–ï–ù–¢–´ –ù–ê –†–ê–ë–û–ß–ò–ô –°–¢–û–õ:")
    print("=" * 50)
    
    for i, segment_file in enumerate(segment_files, 1):
        
        simple_name = f"rap_10sec_{i:02d}.wav"
        target_file = desktop / simple_name
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –µ—Å–ª–∏ –µ—Å—Ç—å
        if target_file.exists():
            target_file.unlink()
        
        # –ö–æ–ø–∏—Ä—É–µ–º
        shutil.copy2(segment_file, target_file)
        
        size_kb = target_file.stat().st_size / 1024
        
        print(f"‚úÖ {i}. {simple_name}")
        print(f"      üíæ {size_kb:.0f} KB")
        print(f"      ‚è±Ô∏è  10 —Å–µ–∫—É–Ω–¥")
        print()

def main():
    print("‚úÇÔ∏è RAP 10SEC CUTTER")
    print("–ù–∞—Ä–µ–∑–∞–µ–º –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ –∏ —É–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä–æ–µ!")
    print("=" * 50)
    print()
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏
    delete_old_folders()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ 10-—Å–µ–∫—É–Ω–¥–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã
    if create_10sec_segments():
        print()
        copy_best_segments_to_desktop()
        
        print()
        print("üöÄ –í–°–Å –ì–û–¢–û–í–û!")
        print("   üìÅ –ù–æ–≤–∞—è –ø–∞–ø–∫–∞: rap_10sec_segments")
        print("   üóëÔ∏è  –°—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏ —É–¥–∞–ª–µ–Ω—ã")
        print("   üìã –õ—É—á—à–∏–µ —Å–µ–≥–º–µ–Ω—Ç—ã –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ")

if __name__ == "__main__":
    main() 