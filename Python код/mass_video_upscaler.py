#!/usr/bin/env python3
"""
Mass Video 4K Upscaler - –ú–∞—Å—Å–æ–≤—ã–π –∞–ø—Å–∫–µ–π–ª –≤—Å–µ—Ö –≤–∏–¥–µ–æ –¥–æ 4K
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –≤–∏–¥–µ–æ –∏–∑ –ø–∞–ø–∫–∏ "–í–∏–¥–µ–æ –¥–ª—è –∫–ª–∏–ø–∞" (218 —à—Ç—É–∫)
–ù–ï –∑–∞—Ö–æ–¥–∏—Ç –≤ –ø–æ–¥–ø–∞–ø–∫—É "–ù–æ–≤–∞—è –ø–∞–ø–∫–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏"
"""

import cv2
import os
from pathlib import Path
import sys
import time
from datetime import datetime

def upscale_video_to_4k(input_path, output_path):
    """–ê–ø—Å–∫–µ–π–ª–∏—Ç –æ–¥–Ω–æ –≤–∏–¥–µ–æ –¥–æ 4K —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è"""
    try:
        print(f"üé¨ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {input_path.name}")
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ
        cap = cv2.VideoCapture(str(input_path))
        
        if not cap.isOpened():
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å: {input_path}")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        fps = cap.get(cv2.CAP_PROP_FPS)
        frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
        orig_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
        orig_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
        
        # 4K —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        target_width = 3840
        target_height = 2160
        
        # –°–æ–∑–¥–∞—ë–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
        fourcc = cv2.VideoWriter_fourcc(*'mp4v')
        out = cv2.VideoWriter(str(output_path), fourcc, fps, (target_width, target_height))
        
        if not out.isOpened():
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {output_path}")
            cap.release()
            return False
        
        frame_num = 0
        start_time = time.time()
        
        while True:
            ret, frame = cap.read()
            if not ret:
                break
            
            # –ê–ø—Å–∫–µ–π–ª–∏–º –∫–∞–¥—Ä –¥–æ 4K
            upscaled_frame = cv2.resize(frame, (target_width, target_height), interpolation=cv2.INTER_CUBIC)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–∞–¥—Ä
            out.write(upscaled_frame)
            frame_num += 1
        
        # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        cap.release()
        out.release()
        cv2.destroyAllWindows()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        elapsed_time = time.time() - start_time
        file_size = output_path.stat().st_size / (1024 * 1024)  # MB
        
        print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! {orig_width}x{orig_height} ‚Üí 4K, {frame_num} –∫–∞–¥—Ä–æ–≤, {elapsed_time:.1f}—Å, {file_size:.1f}MB")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {input_path}: {e}")
        return False

def process_all_videos():
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –≤–∏–¥–µ–æ"""
    
    # –ò—Å—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞ (—Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è!)
    input_dir = Path("../–í–∏–¥–µ–æ –¥–ª—è –∫–ª–∏–ø–∞")
    
    # –í—ã—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞
    output_dir = Path("../–≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ")
    output_dir.mkdir(exist_ok=True)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã –¢–û–õ–¨–ö–û –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–ø–∫–µ (–Ω–µ –≤ –ø–æ–¥–ø–∞–ø–∫–∞—Ö!)
    video_extensions = ['.mp4', '.mov', '.avi', '.mkv']
    video_files = []
    
    for file in input_dir.iterdir():
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫–∏ (–≤–∫–ª—é—á–∞—è "–ù–æ–≤–∞—è –ø–∞–ø–∫–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏")
        if file.is_dir():
            continue
        
        # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã
        if file.suffix.lower() in video_extensions:
            video_files.append(file)
    
    total_videos = len(video_files)
    print(f"üéØ –ù–∞–π–¥–µ–Ω–æ {total_videos} –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print(f"üìÅ –ò—Å—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: {input_dir}")
    print(f"üìÅ –í—ã—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: {output_dir}")
    print(f"‚ö†Ô∏è  –ù–ï –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–ø–∞–ø–∫—É '–ù–æ–≤–∞—è –ø–∞–ø–∫–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏'")
    
    if total_videos == 0:
        print("‚ùå –í–∏–¥–µ–æ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –≤–∏–¥–µ–æ
    success_count = 0
    failed_count = 0
    start_time = time.time()
    
    for i, video_file in enumerate(video_files, 1):
        print(f"\nüìà –ü–†–û–ì–†–ï–°–°: {i}/{total_videos} ({(i/total_videos)*100:.1f}%)")
        
        # –°–æ–∑–¥–∞—ë–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        output_filename = f"4K_{video_file.stem}.mp4"
        output_path = output_dir / output_filename
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        if output_path.exists():
            print(f"‚è≠Ô∏è  –£–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {video_file.name}")
            success_count += 1
            continue
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
        if upscale_video_to_4k(video_file, output_path):
            success_count += 1
        else:
            failed_count += 1
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        elapsed = time.time() - start_time
        avg_time_per_video = elapsed / i
        estimated_remaining = (total_videos - i) * avg_time_per_video
        
        print(f"‚è±Ô∏è  –ü—Ä–æ—à–ª–æ: {elapsed/60:.1f}–º–∏–Ω, –û—Å—Ç–∞–ª–æ—Å—å: ~{estimated_remaining/60:.1f}–º–∏–Ω")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_time = time.time() - start_time
    print(f"\nüéâ –ó–ê–î–ê–ß–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {success_count}/{total_videos}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {failed_count}")
    print(f"‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time/60:.1f} –º–∏–Ω—É—Ç")
    print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_dir}")

if __name__ == "__main__":
    print("üöÄ –ú–ê–°–°–û–í–´–ô –ê–ü–°–ö–ï–ô–õ 218 –í–ò–î–ï–û –î–û 4K")
    print("=" * 50)
    print(f"üïê –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {datetime.now().strftime('%H:%M:%S')}")
    print("=" * 50)
    
    process_all_videos()
    
    print("=" * 50)
    print(f"üïê –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ: {datetime.now().strftime('%H:%M:%S')}")
    print("üé¨ –í–°–ï 218 –í–ò–î–ï–û –ì–û–¢–û–í–´ –î–õ–Ø –î–ê–õ–¨–ù–ï–ô–®–ï–ô –û–ë–†–ê–ë–û–¢–ö–ò!") 