#!/usr/bin/env python3
"""
üåê BROWSER COMPATIBLE CONVERTER üåê
–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤–∏–¥–µ–æ –≤ –±—Ä–∞—É–∑–µ—Ä-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É "browser_unsupported"

–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é AI!
"""

import os
import subprocess
import sys
from pathlib import Path
import shutil

def install_ffmpeg():
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ffmpeg —á–µ—Ä–µ–∑ Homebrew
    """
    print("üîß –£–°–¢–ê–ù–û–í–ö–ê FFMPEG...")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ Homebrew
        result = subprocess.run(["brew", "--version"], capture_output=True, text=True)
        if result.returncode != 0:
            print("‚ùå Homebrew –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            print("üìù –£—Å—Ç–∞–Ω–æ–≤–∏ Homebrew: /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"")
            return False
            
        print("‚úÖ Homebrew –Ω–∞–π–¥–µ–Ω")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ffmpeg
        print("üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é ffmpeg...")
        result = subprocess.run(["brew", "install", "ffmpeg"], check=True)
        
        print("‚úÖ FFmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False
    except FileNotFoundError:
        print("‚ùå Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìù –£—Å—Ç–∞–Ω–æ–≤–∏ Homebrew —Å–Ω–∞—á–∞–ª–∞")
        return False

def convert_to_compatible_mp4(input_file, output_file):
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤–∏–¥–µ–æ –≤ –±—Ä–∞—É–∑–µ—Ä-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π MP4
    """
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    cmd = [
        "ffmpeg",
        "-i", str(input_file),
        "-c:v", "libx264",           # –í–∏–¥–µ–æ –∫–æ–¥–µ–∫ H.264 (—Å–∞–º—ã–π —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π)
        "-preset", "medium",         # –ë–∞–ª–∞–Ω—Å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞
        "-crf", "23",               # –ö–∞—á–µ—Å—Ç–≤–æ (23 = —Ö–æ—Ä–æ—à–µ–µ)
        "-c:a", "aac",              # –ê—É–¥–∏–æ –∫–æ–¥–µ–∫ AAC (—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π)
        "-b:a", "128k",             # –ë–∏—Ç—Ä–µ–π—Ç –∞—É–¥–∏–æ
        "-movflags", "+faststart",   # –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –≤–µ–±
        "-pix_fmt", "yuv420p",      # –§–æ—Ä–º–∞—Ç –ø–∏–∫—Å–µ–ª–µ–π (—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π)
        "-vf", "scale=1920:1080",   # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –¥–æ Full HD (–ª–µ–≥—á–µ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞)
        "-y",                       # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤
        str(output_file)
    ]
    
    try:
        print(f"üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é: {input_file.name}")
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return False

def convert_videos_for_browser():
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –≤–∏–¥–µ–æ –≤ –±—Ä–∞—É–∑–µ—Ä-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ
    """
    
    source_dir = Path.home() / "Desktop" / "—Ö–æ—á—É –µ—â–µ" / "–≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ"
    output_dir = Path.home() / "Desktop" / "—Ö–æ—á—É –µ—â–µ" / "browser_compatible_videos"
    
    output_dir.mkdir(exist_ok=True)
    
    # –ù–∞—Ö–æ–¥–∏–º MP4 —Ñ–∞–π–ª—ã
    video_files = list(source_dir.glob("*.mp4"))
    
    if not video_files:
        print("‚ùå MP4 —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return False
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 5 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_files = video_files[:5]
    
    print(f"üé¨ –ö–û–ù–í–ï–†–¢–ò–†–£–Æ {len(test_files)} –í–ò–î–ï–û –î–õ–Ø –ë–†–ê–£–ó–ï–†–ê:")
    print("=" * 60)
    
    success_count = 0
    
    for i, video_file in enumerate(test_files, 1):
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è (—É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ)
        new_name = f"compatible_video_{i:03d}.mp4"
        output_file = output_dir / new_name
        
        print(f"üìπ [{i}/{len(test_files)}] {video_file.name}")
        print(f"   ‚û°Ô∏è  {new_name}")
        
        if convert_to_compatible_mp4(video_file, output_file):
            success_count += 1
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
            original_size = video_file.stat().st_size / (1024 * 1024)
            new_size = output_file.stat().st_size / (1024 * 1024)
            
            print(f"‚úÖ –ì–û–¢–û–í–û! {original_size:.1f}MB ‚Üí {new_size:.1f}MB")
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
        
        print()
    
    print("=" * 60)
    print(f"üéâ –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success_count}/{len(test_files)}")
    print(f"üìÅ –§–∞–π–ª—ã –≤: {output_dir}")
    print()
    print("üåê –û–°–û–ë–ï–ù–ù–û–°–¢–ò –ë–†–ê–£–ó–ï–†-–°–û–í–ú–ï–°–¢–ò–ú–´–• –í–ò–î–ï–û:")
    print("   üìπ –ö–æ–¥–µ–∫: H.264 (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)")
    print("   üéµ –ê—É–¥–∏–æ: AAC (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–µ–∑–¥–µ)")
    print("   üì± –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: Full HD (1920x1080)")
    print("   ‚ö° FastStart: –±—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print()
    print("üí° –¢–ï–ü–ï–†–¨ –≠–¢–ò –§–ê–ô–õ–´ –¢–û–ß–ù–û –ó–ê–ì–†–£–ó–Ø–¢–°–Ø!")
    
    return True

def copy_to_desktop():
    """
    –ö–æ–ø–∏—Ä—É–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª
    """
    source_dir = Path.home() / "Desktop" / "—Ö–æ—á—É –µ—â–µ" / "browser_compatible_videos"
    desktop = Path.home() / "Desktop"
    
    compatible_files = list(source_dir.glob("compatible_video_*.mp4"))
    
    if not compatible_files:
        print("‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_file = compatible_files[0]
    target = desktop / f"READY_FOR_UPLOAD_{test_file.name}"
    
    shutil.copy2(test_file, target)
    
    size_mb = target.stat().st_size / (1024 * 1024)
    
    print(f"üìÅ –§–ê–ô–õ –°–ö–û–ü–ò–†–û–í–ê–ù –ù–ê –†–ê–ë–û–ß–ò–ô –°–¢–û–õ:")
    print(f"   üìπ {target.name}")
    print(f"   üíæ –†–∞–∑–º–µ—Ä: {size_mb:.1f} MB")
    print(f"   üåê –ë—Ä–∞—É–∑–µ—Ä-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π: ‚úÖ")

def main():
    print("üåê BROWSER COMPATIBLE CONVERTER")
    print("–†–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É browser_unsupported!")
    print("=" * 50)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ffmpeg
    try:
        result = subprocess.run(["ffmpeg", "-version"], capture_output=True, text=True)
        if result.returncode != 0:
            print("‚ö†Ô∏è  FFmpeg –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            if not install_ffmpeg():
                return
    except FileNotFoundError:
        print("‚ö†Ô∏è  FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω")
        if not install_ffmpeg():
            return
    
    print("‚úÖ FFmpeg –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print()
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ
    if convert_videos_for_browser():
        print()
        copy_to_desktop()

if __name__ == "__main__":
    main() 