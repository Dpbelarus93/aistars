#!/usr/bin/env python3
"""
Full RAP 5-Second Cutter - –í–µ—Å—å —Ç—Ä–µ–∫ –ø–æ 5 —Å–µ–∫—É–Ω–¥
–†–µ–∂–µ—Ç –≤–µ—Å—å —Ç—Ä–µ–∫ –Ω–∞ –∫—É—Å–æ—á–∫–∏ –ø–æ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª—É—á—à–∏—Ö —á–∞—Å—Ç–µ–π
"""

import os
from pathlib import Path
from pydub import AudioSegment
import sys

def cut_full_track_5sec(audio_file, output_dir):
    """
    –†–µ–∂–µ—Ç –≤–µ—Å—å —Ç—Ä–µ–∫ –Ω–∞ —Å–µ–≥–º–µ–Ω—Ç—ã –ø–æ 5 —Å–µ–∫—É–Ω–¥
    """
    
    audio_path = Path(audio_file)
    
    if not audio_path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_file}")
        return False
    
    output_dir = Path(output_dir)
    output_dir.mkdir(parents=True, exist_ok=True)
    
    print(f"üé§ –ó–∞–≥—Ä—É–∂–∞—é RAP —Ç—Ä–µ–∫: {audio_path.name}")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º WAV —Ñ–∞–π–ª
        print("üì° –ó–∞–≥—Ä—É–∂–∞—é WAV —Ñ–∞–π–ª...")
        audio = AudioSegment.from_wav(str(audio_path))
        total_duration_sec = len(audio) / 1000
        
        # 5 —Å–µ–∫—É–Ω–¥ = 5000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
        segment_length_sec = 5
        segment_length_ms = 5000
        
        # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤
        total_segments = int(len(audio) / segment_length_ms)
        if len(audio) % segment_length_ms > 0:
            total_segments += 1
        
        print(f"üìä –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {total_duration_sec:.1f} —Å–µ–∫—É–Ω–¥")
        print(f"üì¶ –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ: {total_segments} —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –ø–æ {segment_length_sec} —Å–µ–∫—É–Ω–¥")
        print(f"üìÅ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤: {output_dir}")
        print("üî™ –†–µ–∂–µ–º –≤–µ—Å—å —Ç—Ä–µ–∫ –Ω–∞ –∫—É—Å–æ—á–∫–∏...")
        print("=" * 60)
        
        # –†–µ–∂–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ 5 —Å–µ–∫—É–Ω–¥
        for i in range(total_segments):
            start_ms = i * segment_length_ms
            end_ms = min((i + 1) * segment_length_ms, len(audio))
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–µ–≥–º–µ–Ω—Ç
            segment = audio[start_ms:end_ms]
            
            # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            start_sec = start_ms / 1000
            end_sec = end_ms / 1000
            actual_duration = (end_ms - start_ms) / 1000
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏
            filename = f"rap_5sec_{i+1:03d}_{start_sec:.0f}s-{end_sec:.0f}s.wav"
            segment_path = output_dir / filename
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ WAV
            segment.export(str(segment_path), format="wav")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–≥–º–µ–Ω—Ç–æ–≤
            if (i + 1) % 10 == 0 or i + 1 == total_segments:
                print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {i+1}/{total_segments} —Å–µ–≥–º–µ–Ω—Ç–æ–≤ ({((i+1)/total_segments)*100:.1f}%)")
        
        print("=" * 60)
        print(f"üéâ –ì–û–¢–û–í–û! –°–æ–∑–¥–∞–Ω–æ {total_segments} —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –ø–æ 5 —Å–µ–∫—É–Ω–¥!")
        print(f"üìÅ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_dir}")
        print()
        print("üéØ –ß–¢–û –ü–û–õ–£–ß–ò–õ–û–°–¨:")
        print(f"   üì¶ {total_segments} —Ñ–∞–π–ª–æ–≤ –ø–æ ~5 —Å–µ–∫—É–Ω–¥ –∫–∞–∂–¥—ã–π")
        print("   üé§ –ü–æ–ª–Ω—ã–π –æ—Ö–≤–∞—Ç –≤—Å–µ–≥–æ —Ç—Ä–µ–∫–∞")
        print("   ‚ö° –ë—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä –ª—É—á—à–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤")
        print()
        print("üí° –ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨:")
        print("   1. –ü—Ä–æ—Å–ª—É—à–∞–π—Ç–µ –≤—Å–µ —Å–µ–≥–º–µ–Ω—Ç—ã")
        print("   2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–º—ã–µ –∫—Ä—É—Ç—ã–µ –¥–ª—è —Ä—ç–ø–∞")
        print("   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –ª–∏–ø—Å–∏–Ω–∫–∞!")
        print()
        print("üî• –§–ê–ô–õ–´ –ù–ê–ó–í–ê–ù–´ –ü–û –°–•–ï–ú–ï:")
        print("   rap_5sec_001_0s-5s.wav (1-–π —Å–µ–≥–º–µ–Ω—Ç: 0-5 —Å–µ–∫—É–Ω–¥)")
        print("   rap_5sec_002_5s-10s.wav (2-–π —Å–µ–≥–º–µ–Ω—Ç: 5-10 —Å–µ–∫—É–Ω–¥)")
        print("   –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ...")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üî™ FULL RAP 5-SECOND CUTTER")
    print("–í–µ—Å—å —Ç—Ä–µ–∫ –ø–æ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞")
    print("=" * 60)
    
    # –§–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    source_file = Path("../–ê—É–¥–∏–æ —Ç—Ä–µ–∫–∏/–Ø –≤ –ø–æ—Ç–æ–∫–µ, –Ω–µ—Ç —è –≤ —Ç–æ–ø–µ ,.wav")
    
    if not source_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {source_file}")
        return
    
    # –ü–∞–ø–∫–∞ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ
    desktop_path = Path.home() / "Desktop"
    output_dir = desktop_path / "—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –º—É–∑—ã–∫–æ–π"
    
    print(f"üéØ –§–∞–π–ª: {source_file.name}")
    print(f"üìÇ –ü–∞–ø–∫–∞: {output_dir}")
    print()
    
    cut_full_track_5sec(source_file, output_dir)

if __name__ == "__main__":
    main() 