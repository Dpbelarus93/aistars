#!/usr/bin/env python3
"""
‚ö° QUICK VIDEO FIX ‚ö°
–ë—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
–ü—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º!
"""

from pathlib import Path
import shutil
import random

def find_smallest_videos():
    """
    –ù–∞—Ö–æ–¥–∏—Ç —Å–∞–º—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã
    """
    video_dir = Path.home() / "Desktop" / "—Ö–æ—á—É –µ—â–µ" / "–≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ"
    
    if not video_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ —Å –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return []
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ MP4 —Ñ–∞–π–ª—ã —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏
    video_files = []
    for video_file in video_dir.glob("*.mp4"):
        size_mb = video_file.stat().st_size / (1024 * 1024)
        video_files.append((video_file, size_mb))
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞–∑–º–µ—Ä—É (–æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É)
    video_files.sort(key=lambda x: x[1])
    
    return video_files

def copy_compatible_videos():
    """
    –ö–æ–ø–∏—Ä—É–µ—Ç –≤–∏–¥–µ–æ —Å —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª
    """
    
    video_files = find_smallest_videos()
    
    if not video_files:
        print("‚ùå –í–∏–¥–µ–æ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –ë–µ—Ä–µ–º 5 —Å–∞–º—ã—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    selected_files = video_files[:5]
    
    print(f"üé¨ –í–´–ë–†–ê–ù–û {len(selected_files)} –°–ê–ú–´–• –ú–ê–õ–ï–ù–¨–ö–ò–• –í–ò–î–ï–û:")
    print("=" * 60)
    
    desktop = Path.home() / "Desktop"
    
    for i, (video_file, size_mb) in enumerate(selected_files, 1):
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–º—è –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        simple_name = f"video_{i:02d}.mp4"
        target_file = desktop / simple_name
        
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ –µ—Å—Ç—å, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π
        if target_file.exists():
            target_file.unlink()
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
        shutil.copy2(video_file, target_file)
        
        print(f"üìπ {i}. {simple_name}")
        print(f"   üìä –†–∞–∑–º–µ—Ä: {size_mb:.1f} MB")
        print(f"   ‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª")
        print()
    
    print("=" * 60)
    print("üéâ –ì–û–¢–û–í–û! –í–°–ï –§–ê–ô–õ–´ –ù–ê –†–ê–ë–û–ß–ï–ú –°–¢–û–õ–ï!")
    print()
    print("üí° –ü–û–ü–†–û–ë–£–ô –¢–ï–ü–ï–†–¨ –ó–ê–ì–†–£–ó–ò–¢–¨:")
    print("   üìπ video_01.mp4 (—Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π)")
    print("   üìπ video_02.mp4")
    print("   üìπ video_03.mp4")
    print("   üìπ video_04.mp4")
    print("   üìπ video_05.mp4")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    print("üìä –†–ê–ó–ú–ï–†–´ –§–ê–ô–õ–û–í:")
    for i, (_, size_mb) in enumerate(selected_files, 1):
        print(f"   video_{i:02d}.mp4: {size_mb:.1f} MB")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª—ã –±–æ–ª—å—à–µ 200MB
    large_files = [f for f in video_files if f[1] > 200]
    if large_files:
        print()
        print(f"‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–û {len(large_files)} –§–ê–ô–õ–û–í –ë–û–õ–¨–®–ï 200MB")
        print("   (–û–Ω–∏ –º–æ–≥—É—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è)")

def show_audio_files():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã
    """
    print()
    print("üé§ –î–û–°–¢–£–ü–ù–´–ï –ê–£–î–ò–û –§–ê–ô–õ–´:")
    print("=" * 40)
    
    audio_dir = Path.home() / "Desktop" / "—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –º—É–∑—ã–∫–æ–π" / "professional_vocals"
    
    if not audio_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ —Å –∞—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    audio_files = list(audio_dir.glob("vocals_*.mp3"))
    
    if not audio_files:
        print("‚ùå –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ñ–∞–π–ª–∞
    selected_audio = audio_files[:3]
    
    desktop = Path.home() / "Desktop"
    
    for i, audio_file in enumerate(selected_audio, 1):
        
        simple_name = f"audio_{i:02d}.mp3"
        target_file = desktop / simple_name
        
        if target_file.exists():
            target_file.unlink()
        
        shutil.copy2(audio_file, target_file)
        
        size_kb = audio_file.stat().st_size / 1024
        
        print(f"üéµ {i}. {simple_name}")
        print(f"   üìä –†–∞–∑–º–µ—Ä: {size_kb:.0f} KB")
        print(f"   ‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª")
        print()

def main():
    print("‚ö° QUICK VIDEO FIX")
    print("–ë—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∑–∞–≥—Ä—É–∑–∫–∏!")
    print("=" * 40)
    print()
    
    print("üîß –ß–¢–û –î–ï–õ–ê–ï–ú:")
    print("   1. –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –≤–∏–¥–µ–æ")
    print("   2. –î–∞–µ–º –∏–º –ø—Ä–æ—Å—Ç—ã–µ –∏–º–µ–Ω–∞")
    print("   3. –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª")
    print("   4. –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–≥—Ä—É–∑–∫–µ!")
    print()
    
    copy_compatible_videos()
    show_audio_files()
    
    print()
    print("üöÄ –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
    print("   1. üìπ –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≥—Ä—É–∑–∏—Ç—å video_01.mp4")
    print("   2. üé§ –ó–∞–≥—Ä—É–∑–∏ audio_01.mp3")
    print("   3. üé¨ –°–æ–∑–¥–∞–π –ª–∏–ø—Å–∏–Ω–∫!")
    print()
    print("üí° –ï–°–õ–ò –ù–ï –†–ê–ë–û–¢–ê–ï–¢ - –ü–û–ü–†–û–ë–£–ô –°–õ–ï–î–£–Æ–©–ò–ô –§–ê–ô–õ!")

if __name__ == "__main__":
    main() 